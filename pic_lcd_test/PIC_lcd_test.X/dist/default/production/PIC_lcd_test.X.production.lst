

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Mar 11 00:08:06 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0009                     _PORTE	set	9
   207  0008                     _PORTD	set	8
   208  0049                     _RE1	set	73
   209  0048                     _RE0	set	72
   210  0089                     _TRISE	set	137
   211  0088                     _TRISD	set	136
   212  0189                     _ANSELH	set	393
   213  0188                     _ANSEL	set	392
   214                           
   215                           	psect	strings
   216  0003                     __pstrings:
   217  0003                     stringtab:
   218  0003                     __stringtab:
   219  0003                     stringcode:	
   220                           ;	String table - string pointers are 1 byte each
   221                           
   222  0003                     stringdir:
   223  0003  3000               	movlw	high stringdir
   224  0004  008A               	movwf	10
   225  0005  0804               	movf	4,w
   226  0006  0A84               	incf	4,f
   227  0007  0782               	addwf	2,f
   228  0008                     __stringbase:
   229  0008  3400               	retlw	0
   230  0009                     __end_of__stringtab:
   231  0009                     STR_1:
   232  0009  3470               	retlw	112	;'p'
   233  000A  3472               	retlw	114	;'r'
   234  000B  3465               	retlw	101	;'e'
   235  000C  3465               	retlw	101	;'e'
   236  000D  3474               	retlw	116	;'t'
   237  000E  3468               	retlw	104	;'h'
   238  000F  3469               	retlw	105	;'i'
   239  0010  3400               	retlw	0
   240                           
   241                           	psect	cinit
   242  07FC                     start_initialization:	
   243                           ; #config settings
   244                           
   245  07FC                     __initialization:
   246  07FC                     end_of_initialization:	
   247                           ;End of C runtime variable initialization code
   248                           
   249  07FC                     __end_of__initialization:
   250  07FC  0183               	clrf	3
   251  07FD  120A  118A  2FA3   	ljmp	_main	;jump to C main() function
   252                           
   253                           	psect	cstackCOMMON
   254  0070                     __pcstackCOMMON:
   255  0070                     ?_delay:
   256  0070                     ?_lcd_enable:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?_lcd_command:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ?_lcd_data:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ?_lcd_string:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0070                     ?_main:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     delay@ms:	
   272                           ; 1 bytes @ 0x0
   273                           
   274                           
   275                           ; 2 bytes @ 0x0
   276  0070                     	ds	2
   277  0072                     ??_delay:
   278                           
   279                           ; 1 bytes @ 0x2
   280  0072                     	ds	1
   281  0073                     delay@i:
   282                           
   283                           ; 2 bytes @ 0x3
   284  0073                     	ds	2
   285  0075                     delay@j:
   286                           
   287                           ; 2 bytes @ 0x5
   288  0075                     	ds	2
   289  0077                     ??_lcd_enable:
   290  0077                     ??_lcd_command:	
   291                           ; 1 bytes @ 0x7
   292                           
   293  0077                     ??_lcd_data:	
   294                           ; 1 bytes @ 0x7
   295                           
   296  0077                     lcd_command@a:	
   297                           ; 1 bytes @ 0x7
   298                           
   299  0077                     lcd_data@a:	
   300                           ; 1 bytes @ 0x7
   301                           
   302                           
   303                           ; 1 bytes @ 0x7
   304  0077                     	ds	1
   305  0078                     ??_lcd_string:
   306                           
   307                           ; 1 bytes @ 0x8
   308  0078                     	ds	1
   309  0079                     lcd_string@a:
   310                           
   311                           ; 1 bytes @ 0x9
   312  0079                     	ds	1
   313  007A                     ??_main:
   314                           
   315                           	psect	maintext
   316  07A3                     __pmaintext:	
   317                           ; 1 bytes @ 0xA
   318 ;;
   319 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   320 ;;
   321 ;; *************** function _main *****************
   322 ;; Defined at:
   323 ;;		line 65 in file "Lcd_test.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;		None
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   332 ;; Tracked objects:
   333 ;;		On entry : B00/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   337 ;;      Params:         0       0       0       0       0
   338 ;;      Locals:         0       0       0       0       0
   339 ;;      Temps:          0       0       0       0       0
   340 ;;      Totals:         0       0       0       0       0
   341 ;;Total ram usage:        0 bytes
   342 ;; Hardware stack levels required when called: 4
   343 ;; This function calls:
   344 ;;		_lcd_command
   345 ;;		_lcd_string
   346 ;; This function is called by:
   347 ;;		Startup code after reset
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           
   352                           ;psect for function _main
   353  07A3                     _main:
   354  07A3                     l729:	
   355                           ;incstack = 0
   356                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   357                           
   358                           
   359                           ;Lcd_test.c: 67:     PORTD=0x00;
   360  07A3  1283               	bcf	3,5	;RP0=0, select bank0
   361  07A4  1303               	bcf	3,6	;RP1=0, select bank0
   362  07A5  0188               	clrf	8	;volatile
   363                           
   364                           ;Lcd_test.c: 68:     TRISD=0x00;
   365  07A6  1683               	bsf	3,5	;RP0=1, select bank1
   366  07A7  1303               	bcf	3,6	;RP1=0, select bank1
   367  07A8  0188               	clrf	8	;volatile
   368                           
   369                           ;Lcd_test.c: 69:     ANSEL=0x00;
   370  07A9  1683               	bsf	3,5	;RP0=1, select bank3
   371  07AA  1703               	bsf	3,6	;RP1=1, select bank3
   372  07AB  0188               	clrf	8	;volatile
   373                           
   374                           ;Lcd_test.c: 70:     ANSELH=0x00;
   375  07AC  0189               	clrf	9	;volatile
   376                           
   377                           ;Lcd_test.c: 71:     PORTE=0x00;
   378  07AD  1283               	bcf	3,5	;RP0=0, select bank0
   379  07AE  1303               	bcf	3,6	;RP1=0, select bank0
   380  07AF  0189               	clrf	9	;volatile
   381                           
   382                           ;Lcd_test.c: 72:     TRISE=0x00;
   383  07B0  1683               	bsf	3,5	;RP0=1, select bank1
   384  07B1  1303               	bcf	3,6	;RP1=0, select bank1
   385  07B2  0189               	clrf	9	;volatile
   386  07B3                     l731:
   387                           
   388                           ;Lcd_test.c: 75:     {;Lcd_test.c: 76:         lcd_command(0x38);
   389  07B3  3038               	movlw	56
   390  07B4  120A  118A  2753  120A  118A  	fcall	_lcd_command
   391  07B9                     l733:
   392                           
   393                           ;Lcd_test.c: 77:         lcd_command(0x0E);
   394  07B9  300E               	movlw	14
   395  07BA  120A  118A  2753  120A  118A  	fcall	_lcd_command
   396  07BF                     l735:
   397                           
   398                           ;Lcd_test.c: 78:         lcd_command(0x80);
   399  07BF  3080               	movlw	128
   400  07C0  120A  118A  2753  120A  118A  	fcall	_lcd_command
   401  07C5                     l737:
   402                           
   403                           ;Lcd_test.c: 79:         lcd_string("preethi");
   404  07C5  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   405  07C6  120A  118A  2784  120A  118A  	fcall	_lcd_string
   406  07CB  2FB3               	goto	l731
   407  07CC  120A  118A  2800   	ljmp	start
   408  07CF                     __end_of_main:
   409                           
   410                           	psect	text1
   411  0784                     __ptext1:	
   412 ;; *************** function _lcd_string *****************
   413 ;; Defined at:
   414 ;;		line 57 in file "Lcd_test.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;  a               1    wreg     PTR unsigned char 
   417 ;;		 -> STR_1(8), 
   418 ;; Auto vars:     Size  Location     Type
   419 ;;  a               1    9[COMMON] PTR unsigned char 
   420 ;;		 -> STR_1(8), 
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   430 ;;      Params:         0       0       0       0       0
   431 ;;      Locals:         1       0       0       0       0
   432 ;;      Temps:          1       0       0       0       0
   433 ;;      Totals:         2       0       0       0       0
   434 ;;Total ram usage:        2 bytes
   435 ;; Hardware stack levels used: 1
   436 ;; Hardware stack levels required when called: 3
   437 ;; This function calls:
   438 ;;		_lcd_data
   439 ;; This function is called by:
   440 ;;		_main
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           
   445                           ;psect for function _lcd_string
   446  0784                     _lcd_string:
   447                           
   448                           ;incstack = 0
   449                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   450                           ;lcd_string@a stored from wreg
   451  0784  00F9               	movwf	lcd_string@a
   452  0785                     l721:
   453                           
   454                           ;Lcd_test.c: 57: void lcd_string(char *a);Lcd_test.c: 58: {;Lcd_test.c: 59:     while(*a
      +                          !='\0')
   455  0785  2F96               	goto	l727
   456  0786                     l723:
   457                           
   458                           ;Lcd_test.c: 60:     {;Lcd_test.c: 61:         lcd_data(*a);
   459  0786  0879               	movf	lcd_string@a,w
   460  0787  0084               	movwf	4
   461  0788  120A  118A  2003  120A  118A  	fcall	stringdir
   462  078D  120A  118A  275F  120A  118A  	fcall	_lcd_data
   463  0792                     l725:
   464                           
   465                           ;Lcd_test.c: 62:         a++;
   466  0792  3001               	movlw	1
   467  0793  00F8               	movwf	??_lcd_string
   468  0794  0878               	movf	??_lcd_string,w
   469  0795  07F9               	addwf	lcd_string@a,f
   470  0796                     l727:
   471                           
   472                           ;Lcd_test.c: 59:     while(*a!='\0')
   473  0796  0879               	movf	lcd_string@a,w
   474  0797  0084               	movwf	4
   475  0798  120A  118A  2003  120A  118A  	fcall	stringdir
   476  079D  3A00               	xorlw	0
   477  079E  1D03               	skipz
   478  079F  2FA1               	goto	u61
   479  07A0  2FA2               	goto	u60
   480  07A1                     u61:
   481  07A1  2F86               	goto	l723
   482  07A2                     u60:
   483  07A2                     l39:
   484  07A2  0008               	return
   485  07A3                     __end_of_lcd_string:
   486                           
   487                           	psect	text2
   488  075F                     __ptext2:	
   489 ;; *************** function _lcd_data *****************
   490 ;; Defined at:
   491 ;;		line 50 in file "Lcd_test.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;  a               1    wreg     unsigned char 
   494 ;; Auto vars:     Size  Location     Type
   495 ;;  a               1    7[COMMON] unsigned char 
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   505 ;;      Params:         0       0       0       0       0
   506 ;;      Locals:         1       0       0       0       0
   507 ;;      Temps:          0       0       0       0       0
   508 ;;      Totals:         1       0       0       0       0
   509 ;;Total ram usage:        1 bytes
   510 ;; Hardware stack levels used: 1
   511 ;; Hardware stack levels required when called: 2
   512 ;; This function calls:
   513 ;;		_lcd_enable
   514 ;; This function is called by:
   515 ;;		_lcd_string
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           
   520                           ;psect for function _lcd_data
   521  075F                     _lcd_data:
   522                           
   523                           ;incstack = 0
   524                           ; Regs used in _lcd_data: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   525                           ;lcd_data@a stored from wreg
   526  075F  00F7               	movwf	lcd_data@a
   527  0760                     l709:
   528                           
   529                           ;Lcd_test.c: 50: void lcd_data(char a);Lcd_test.c: 51: {;Lcd_test.c: 52:     RE1=1;
   530  0760  1283               	bcf	3,5	;RP0=0, select bank0
   531  0761  1303               	bcf	3,6	;RP1=0, select bank0
   532  0762  1489               	bsf	9,1	;volatile
   533  0763                     l711:
   534                           
   535                           ;Lcd_test.c: 53:     PORTD=a;
   536  0763  0877               	movf	lcd_data@a,w
   537  0764  0088               	movwf	8	;volatile
   538  0765                     l713:
   539                           
   540                           ;Lcd_test.c: 54:     lcd_enable();
   541  0765  120A  118A  276B  120A  118A  	fcall	_lcd_enable
   542  076A                     l33:
   543  076A  0008               	return
   544  076B                     __end_of_lcd_data:
   545                           
   546                           	psect	text3
   547  0753                     __ptext3:	
   548 ;; *************** function _lcd_command *****************
   549 ;; Defined at:
   550 ;;		line 41 in file "Lcd_test.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;  a               1    wreg     unsigned char 
   553 ;; Auto vars:     Size  Location     Type
   554 ;;  a               1    7[COMMON] unsigned char 
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   564 ;;      Params:         0       0       0       0       0
   565 ;;      Locals:         1       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0
   567 ;;      Totals:         1       0       0       0       0
   568 ;;Total ram usage:        1 bytes
   569 ;; Hardware stack levels used: 1
   570 ;; Hardware stack levels required when called: 2
   571 ;; This function calls:
   572 ;;		_lcd_enable
   573 ;; This function is called by:
   574 ;;		_main
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           
   579                           ;psect for function _lcd_command
   580  0753                     _lcd_command:
   581                           
   582                           ;incstack = 0
   583                           ; Regs used in _lcd_command: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   584                           ;lcd_command@a stored from wreg
   585  0753  00F7               	movwf	lcd_command@a
   586  0754                     l715:
   587                           
   588                           ;Lcd_test.c: 41: void lcd_command(char a);Lcd_test.c: 42: {;Lcd_test.c: 43:    RE1=0;
   589  0754  1283               	bcf	3,5	;RP0=0, select bank0
   590  0755  1303               	bcf	3,6	;RP1=0, select bank0
   591  0756  1089               	bcf	9,1	;volatile
   592  0757                     l717:
   593                           
   594                           ;Lcd_test.c: 44:    PORTD=a;
   595  0757  0877               	movf	lcd_command@a,w
   596  0758  0088               	movwf	8	;volatile
   597  0759                     l719:
   598                           
   599                           ;Lcd_test.c: 47:    lcd_enable();
   600  0759  120A  118A  276B  120A  118A  	fcall	_lcd_enable
   601  075E                     l30:
   602  075E  0008               	return
   603  075F                     __end_of_lcd_command:
   604                           
   605                           	psect	text4
   606  076B                     __ptext4:	
   607 ;; *************** function _lcd_enable *****************
   608 ;; Defined at:
   609 ;;		line 34 in file "Lcd_test.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;		None
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   623 ;;      Params:         0       0       0       0       0
   624 ;;      Locals:         0       0       0       0       0
   625 ;;      Temps:          0       0       0       0       0
   626 ;;      Totals:         0       0       0       0       0
   627 ;;Total ram usage:        0 bytes
   628 ;; Hardware stack levels used: 1
   629 ;; Hardware stack levels required when called: 1
   630 ;; This function calls:
   631 ;;		_delay
   632 ;; This function is called by:
   633 ;;		_lcd_command
   634 ;;		_lcd_data
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           
   639                           ;psect for function _lcd_enable
   640  076B                     _lcd_enable:
   641  076B                     l703:	
   642                           ;incstack = 0
   643                           ; Regs used in _lcd_enable: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   644                           
   645                           
   646                           ;Lcd_test.c: 36:     RE0=1;
   647  076B  1283               	bcf	3,5	;RP0=0, select bank0
   648  076C  1303               	bcf	3,6	;RP1=0, select bank0
   649  076D  1409               	bsf	9,0	;volatile
   650  076E                     l705:
   651                           
   652                           ;Lcd_test.c: 37:     delay(10);
   653  076E  300A               	movlw	10
   654  076F  00F0               	movwf	delay@ms
   655  0770  3000               	movlw	0
   656  0771  00F1               	movwf	delay@ms+1
   657  0772  120A  118A  27CF  120A  118A  	fcall	_delay
   658  0777                     l707:
   659                           
   660                           ;Lcd_test.c: 38:     RE0=0;
   661  0777  1283               	bcf	3,5	;RP0=0, select bank0
   662  0778  1303               	bcf	3,6	;RP1=0, select bank0
   663  0779  1009               	bcf	9,0	;volatile
   664                           
   665                           ;Lcd_test.c: 39:     delay(10);
   666  077A  300A               	movlw	10
   667  077B  00F0               	movwf	delay@ms
   668  077C  3000               	movlw	0
   669  077D  00F1               	movwf	delay@ms+1
   670  077E  120A  118A  27CF  120A  118A  	fcall	_delay
   671  0783                     l27:
   672  0783  0008               	return
   673  0784                     __end_of_lcd_enable:
   674                           
   675                           	psect	text5
   676  07CF                     __ptext5:	
   677 ;; *************** function _delay *****************
   678 ;; Defined at:
   679 ;;		line 25 in file "Lcd_test.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;  ms              2    0[COMMON] int 
   682 ;; Auto vars:     Size  Location     Type
   683 ;;  j               2    5[COMMON] int 
   684 ;;  i               2    3[COMMON] int 
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, status,2, btemp+1
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   694 ;;      Params:         2       0       0       0       0
   695 ;;      Locals:         4       0       0       0       0
   696 ;;      Temps:          1       0       0       0       0
   697 ;;      Totals:         7       0       0       0       0
   698 ;;Total ram usage:        7 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; This function calls:
   701 ;;		Nothing
   702 ;; This function is called by:
   703 ;;		_lcd_enable
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           
   708                           ;psect for function _delay
   709  07CF                     _delay:
   710  07CF                     l689:	
   711                           ;incstack = 0
   712                           ; Regs used in _delay: [wreg+status,2+btemp+1]
   713                           
   714                           
   715                           ;Lcd_test.c: 25: void delay(int ms);Lcd_test.c: 26: {;Lcd_test.c: 27:     int i,j;;Lcd_t
      +                          est.c: 28:     for(i=0;i<ms;i++)
   716  07CF  01F3               	clrf	delay@i
   717  07D0  01F4               	clrf	delay@i+1
   718  07D1  2FED               	goto	l19
   719  07D2                     l691:
   720                           
   721                           ;Lcd_test.c: 29:     {;Lcd_test.c: 30:         for(j=0;j<1000;j++);
   722  07D2  01F5               	clrf	delay@j
   723  07D3  01F6               	clrf	delay@j+1
   724  07D4                     l697:
   725  07D4  3001               	movlw	1
   726  07D5  07F5               	addwf	delay@j,f
   727  07D6  1803               	skipnc
   728  07D7  0AF6               	incf	delay@j+1,f
   729  07D8  3000               	movlw	0
   730  07D9  07F6               	addwf	delay@j+1,f
   731  07DA                     l699:
   732  07DA  0876               	movf	delay@j+1,w
   733  07DB  3A80               	xorlw	128
   734  07DC  00FF               	movwf	btemp+1
   735  07DD  3083               	movlw	131
   736  07DE  027F               	subwf	btemp+1,w
   737  07DF  1D03               	skipz
   738  07E0  2FE3               	goto	u45
   739  07E1  30E8               	movlw	232
   740  07E2  0275               	subwf	delay@j,w
   741  07E3                     u45:
   742  07E3  1C03               	skipc
   743  07E4  2FE6               	goto	u41
   744  07E5  2FE7               	goto	u40
   745  07E6                     u41:
   746  07E6  2FD4               	goto	l697
   747  07E7                     u40:
   748  07E7                     l701:
   749                           
   750                           ;Lcd_test.c: 31:     }
   751  07E7  3001               	movlw	1
   752  07E8  07F3               	addwf	delay@i,f
   753  07E9  1803               	skipnc
   754  07EA  0AF4               	incf	delay@i+1,f
   755  07EB  3000               	movlw	0
   756  07EC  07F4               	addwf	delay@i+1,f
   757  07ED                     l19:
   758  07ED  0874               	movf	delay@i+1,w
   759  07EE  3A80               	xorlw	128
   760  07EF  00F2               	movwf	??_delay
   761  07F0  0871               	movf	delay@ms+1,w
   762  07F1  3A80               	xorlw	128
   763  07F2  0272               	subwf	??_delay,w
   764  07F3  1D03               	skipz
   765  07F4  2FF7               	goto	u55
   766  07F5  0870               	movf	delay@ms,w
   767  07F6  0273               	subwf	delay@i,w
   768  07F7                     u55:
   769  07F7  1C03               	skipc
   770  07F8  2FFA               	goto	u51
   771  07F9  2FFB               	goto	u50
   772  07FA                     u51:
   773  07FA  2FD2               	goto	l691
   774  07FB                     u50:
   775  07FB                     l24:
   776  07FB  0008               	return
   777  07FC                     __end_of_delay:
   778  007E                     btemp	set	126	;btemp
   779  007E                     wtemp0	set	126
   780                           
   781                           	psect	config
   782                           
   783                           ;Config register CONFIG1 @ 0x2007
   784                           ;	Oscillator Selection bits
   785                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   786                           ;	Watchdog Timer Enable bit
   787                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   788                           ;	Power-up Timer Enable bit
   789                           ;	PWRTE = ON, PWRT enabled
   790                           ;	RE3/MCLR pin function select bit
   791                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   792                           ;	Code Protection bit
   793                           ;	CP = OFF, Program memory code protection is disabled
   794                           ;	Data Code Protection bit
   795                           ;	CPD = OFF, Data memory code protection is disabled
   796                           ;	Brown Out Reset Selection bits
   797                           ;	BOREN = OFF, BOR disabled
   798                           ;	Internal External Switchover bit
   799                           ;	IESO = ON, Internal/External Switchover mode is enabled
   800                           ;	Fail-Safe Clock Monitor Enabled bit
   801                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   802                           ;	Low Voltage Programming Enable bit
   803                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   804                           ;	In-Circuit Debugger Mode bit
   805                           ;	DEBUG = 0x1, unprogrammed default
   806  2007                     	org	8199
   807  2007  2CE4               	dw	11492

Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@a	PTR unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_lcd_string
    _lcd_string->_lcd_data
    _lcd_enable->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     610
                        _lcd_command
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           2     2      0     344
                                              8 COMMON     2     2      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             1     1      0     266
                                              7 COMMON     1     1      0
                         _lcd_enable
 ---------------------------------------------------------------------------------
 (1) _lcd_command                                          1     1      0     266
                                              7 COMMON     1     1      0
                         _lcd_enable
 ---------------------------------------------------------------------------------
 (3) _lcd_enable                                           0     0      0     244
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                7     5      2     244
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_command
     _lcd_enable
       _delay
   _lcd_string
     _lcd_data
       _lcd_enable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Mar 11 00:08:06 2022

                      pc 0002                       l30 075E                       l24 07FB  
                     l33 076A                       l19 07ED                       l27 0783  
                     l39 07A2                       u40 07E7                       u41 07E6  
                     u50 07FB                       u51 07FA                       u60 07A2  
                     u45 07E3                       u61 07A1                       u55 07F7  
                     fsr 0004                      l701 07E7                      l703 076B  
                    l711 0763                      l705 076E                      l713 0765  
                    l721 0785                      l707 0777                      l715 0754  
                    l723 0786                      l731 07B3                      l717 0757  
                    l709 0760                      l725 0792                      l733 07B9  
                    l719 0759                      l727 0796                      l735 07BF  
                    l737 07C5                      l729 07A3                      l691 07D2  
                    l697 07D4                      l689 07CF                      l699 07DA  
                    _RE0 0048                      _RE1 0049                      fsr0 0004  
           lcd_command@a 0077                     STR_1 0009                     _main 07A3  
                   btemp 007E                     start 0000              lcd_string@a 0079  
                  ?_main 0070                    _ANSEL 0188                    _PORTD 0008  
                  _PORTE 0009                    _TRISD 0088                    _TRISE 0089  
                  _delay 07CF                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07CF  
                 ??_main 007A                   ?_delay 0070                   _ANSELH 0189  
       __end_of_lcd_data 076B     __size_of_lcd_command 000C                   delay@i 0073  
                 delay@j 0075  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_delay 07FC                  ??_delay 0072               __pmaintext 07A3  
             _lcd_enable 076B                ?_lcd_data 0070               _lcd_string 0784  
             __stringtab 0003                  __ptext1 0784                  __ptext2 075F  
                __ptext3 0753                  __ptext4 076B                  __ptext5 07CF  
                delay@ms 0070               ??_lcd_data 0077     end_of_initialization 07FC  
            ?_lcd_enable 0070              ?_lcd_string 0070            ??_lcd_command 0077  
    start_initialization 07FC      __size_of_lcd_enable 0019      __end_of_lcd_command 075F  
    __size_of_lcd_string 001F                ___latbits 0002        __size_of_lcd_data 000C  
              __pstrings 0003           __size_of_delay 002D              _lcd_command 0753  
              lcd_data@a 0077              __stringbase 0008             ??_lcd_enable 0077  
           ??_lcd_string 0078       __end_of_lcd_enable 0784       __end_of_lcd_string 07A3  
     __end_of__stringtab 0009                 _lcd_data 075F            __size_of_main 002C  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
           ?_lcd_command 0070  
